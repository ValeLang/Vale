sealed exported interface IShip imm { }

exported struct Spaceship imm { fuel int; }
impl IShip for Spaceship;

exported struct Seaship imm { leftFuel int; rightFuel int; }
impl IShip for Seaship;

abstract func getFuel(virtual this IShip) int;
func getFuel(this Spaceship) int { this.fuel }
func getFuel(this Seaship) int { this.leftFuel + this.rightFuel }

exported func valeGetShipFuel(s IShip) int {
  return s.getFuel();
}

extern func cGetShipFuel(s IShip) int;

exported func main() int {
  x IShip = Spaceship(7); // to force the above impl to happen
  cGetShipFuel(Seaship(37, 5))
}
