import v.builtins.result.*;

extern("vale_as_subtype")
func as<TargetKind, SourceType>(left SourceType) Result<SuccessType, FailType>
where
  SourceType Ref = Ref[own, rw, _],
  FailType Ref = SourceType Ref,
  SuccessType Ref = Ref[own, rw, TargetKind];

extern("vale_as_subtype")
func as<TargetKind, SourceType>(left SourceType) Result<SuccessType, FailType>
where
  SourcePermission Permission,
  SourceKind Kind,
  SourceType Ref = Ref[any(borrow, ptr), SourcePermission, SourceKind],
  FailType Ref = Ref[ptr, SourcePermission, SourceKind],
  SuccessType Ref = Ref[ptr, SourcePermission, TargetKind];
