
struct Muta weakable { hp int; }
interface IUnit weakable { fn getHp(virtual self &IUnit) int; }
impl IUnit for Muta;
fn getHp(self &Muta impl IUnit) int { self.hp }

fn main() int export {
  ownMuta = Muta(73);
  weakUnit &&IUnit = &&ownMuta;
  drop(ownMuta);
  maybeBorrowUnit = lock(weakUnit);
  = if (maybeBorrowUnit.isEmpty()) {
      = 42;
    } else {
      maybeBorrowUnit.get().getHp()
    }
}