
import optutils.*;
import ifunction.ifunction1.*;

struct MyEquals9Functor { }
impl IFunction1<mut, int, bool> for MyEquals9Functor;
func __call(this &!MyEquals9Functor impl IFunction1<mut, int, bool>, i int) bool { ret i == 9; }

exported func main() bool {
  a Opt<int> = Some(9);
  f = MyEquals9Functor!();
  b Opt<bool> = a.map<int, bool>(&!f);
  ret b.getOr<bool>(false);
}
