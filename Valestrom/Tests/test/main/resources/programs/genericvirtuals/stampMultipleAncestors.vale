
interface I<T> imm where T Ref { }

interface J<T> imm where T Ref { }
impl<T> I<T> for J<T>;

interface K<T> imm where T Ref { }
impl<T> J<T> for K<T>;

struct L<T> imm where T Ref { }
impl<T> K<T> for L<T>;

exported func main() int {
  x = L<int>();
  ret 4;
}
