
fn range(begin int, end int) IntRange { ret IntRange(begin, end); }
struct IntRange { begin int; end int; }
fn begin(self &IntRange) IntRangeIter { ret IntRangeIter(self, self.begin); }
struct IntRangeIter { range &IntRange; i! int; }
fn next(self &!IntRangeIter) Opt<int> {
  if self.i < self.range.end {
    Some(set self.i = self.i + 1)
  } else {
    None<int>()
  }
}
