
weakable struct Muta { hp int; }
weakable interface IUnit { func getHp(virtual self &&IUnit) int; }
impl IUnit for Muta;
func getHp(self &&Muta) int {
  maybeBorrowSelf = lock(self);
  return if (maybeBorrowSelf.isEmpty()) {
      drop(maybeBorrowSelf);
      42
    } else {
      (maybeBorrowSelf).get().hp
    };
}

exported func main() int {
  ownMuta = Muta(73);
  weakUnit &&IUnit = &&ownMuta;
  drop(ownMuta);
  return getHp(weakUnit);
}