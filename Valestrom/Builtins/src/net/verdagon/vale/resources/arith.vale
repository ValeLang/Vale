
fn float(x int) float { ret castI32Float(x); }
fn castI32Float(x int) float extern;

fn int(x float) int { ret castFloatI32(x); }
fn castFloatI32(x float) int extern;

fn TruncateI64ToI32(x i64) int extern;

fn -(x int) int { ret __vbi_negateI32(x); }
fn __vbi_negateI32(x int) int extern;

fn -(x float) float { ret __vbi_negateFloat(x); }
fn __vbi_negateFloat(x float) float extern;

fn +(left int, right int) int { ret __vbi_addI32(left, right); }
fn __vbi_addI32(left int, right int) int extern;

fn +(left i64, right i64) i64 { ret __vbi_addI64(left, right); }
fn __vbi_addI64(left i64, right i64) i64 extern;

fn +(left float, right float) float { ret __vbi_addFloatFloat(left, right); }
fn __vbi_addFloatFloat(left float, right float) float extern;

fn *(left int, right int) int { ret __vbi_multiplyI32(left, right); }
fn __vbi_multiplyI32(left int, right int) int extern;

fn *(left i64, right i64) i64 { ret __vbi_multiplyI64(left, right); }
fn __vbi_multiplyI64(left i64, right i64) i64 extern;

fn *(left float, right float) float { ret __vbi_multiplyFloatFloat(left, right); }
fn __vbi_multiplyFloatFloat(left float, right float) float extern;

fn -(left int, right int) int { ret __vbi_subtractI32(left, right); }
fn __vbi_subtractI32(left int, right int) int extern;

fn -(left i64, right i64) i64 { ret __vbi_subtractI64(left, right); }
fn __vbi_subtractI64(left i64, right i64) i64 extern;

fn -(left float, right float) float { ret __vbi_subtractFloatFloat(left, right); }
fn __vbi_subtractFloatFloat(left float, right float) float extern;

fn /(left int, right int) int { ret __vbi_divideI32(left, right); }
fn __vbi_divideI32(left int, right int) int extern;

fn /(left i64, right i64) i64 { ret __vbi_divideI64(left, right); }
fn __vbi_divideI64(left i64, right i64) i64 extern;

fn /(left float, right float) float { ret __vbi_divideFloatFloat(left, right); }
fn __vbi_divideFloatFloat(left float, right float) float extern;

fn <(left float, right float) bool { ret __vbi_lessThanFloat(left, right); }
fn __vbi_lessThanFloat(left float, right float) bool extern;

fn <(left i64, right i64) bool { ret __vbi_lessThanI64(left, right); }
fn __vbi_lessThanI64(left i64, right i64) bool extern;

fn <(left int, right int) bool { ret __vbi_lessThanI32(left, right); }
fn __vbi_lessThanI32(left int, right int) bool extern;

fn >(left float, right float) bool { ret __vbi_greaterThanFloat(left, right); }
fn __vbi_greaterThanFloat(left float, right float) bool extern;

fn >(left i64, right i64) bool { ret __vbi_greaterThanI64(left, right); }
fn __vbi_greaterThanI64(left i64, right i64) bool extern;

fn >(left int, right int) bool { ret __vbi_greaterThanI32(left, right); }
fn __vbi_greaterThanI32(left int, right int) bool extern;

fn <=(left int, right int) bool { ret __vbi_lessThanOrEqI32(left, right); }
fn __vbi_lessThanOrEqI32(left int, right int) bool extern;

fn <=(left i64, right i64) bool { ret __vbi_lessThanOrEqI64(left, right); }
fn __vbi_lessThanOrEqI64(left i64, right i64) bool extern;

fn >=(left int, right int) bool { ret __vbi_greaterThanOrEqI32(left, right); }
fn __vbi_greaterThanOrEqI32(left int, right int) bool extern;

fn >=(left i64, right i64) bool { ret __vbi_greaterThanOrEqI64(left, right); }
fn __vbi_greaterThanOrEqI64(left i64, right i64) bool extern;

fn ==(left int, right int) bool { ret __vbi_eqI32(left, right); }
fn __vbi_eqI32(left int, right int) bool extern;

fn ==(left i64, right i64) bool { ret __vbi_eqI64(left, right); }
fn __vbi_eqI64(left i64, right i64) bool extern;

fn ==(left float, right float) bool { ret __vbi_eqFloatFloat(left, right); }
fn __vbi_eqFloatFloat(left float, right float) bool extern;

fn mod(left int, right int) int { ret __vbi_modI32(left, right); }
fn __vbi_modI32(left int, right int) int extern;

fn mod(left i64, right i64) i64 { ret __vbi_modI64(left, right); }
fn __vbi_modI64(left i64, right i64) i64 extern;
