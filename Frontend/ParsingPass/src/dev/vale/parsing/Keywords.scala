package dev.vale.parsing

import dev.vale.{Interner, StrI}

class Keywords(interner: Interner) {
  val UNDERSCORE = interner.intern(StrI("_"))
  val INT = interner.intern(StrI("int"))
  val REF = interner.intern(StrI("Ref"))
  val KIND = interner.intern(StrI("Kind"))
  val PROT = interner.intern(StrI("Prot"))
  val REFLIST = interner.intern(StrI("RefList"))
  val OWNERSHIP = interner.intern(StrI("Ownership"))
  val VARIABILITY = interner.intern(StrI("Variability"))
  val MUTABILITY = interner.intern(StrI("Mutability"))
  val LOCATION = interner.intern(StrI("Location"))

  val TRUE = interner.intern(StrI("true"))
  val FALSE = interner.intern(StrI("false"))
  val OWN = interner.intern(StrI("own"))
  val BORROW = interner.intern(StrI("borrow"))
  val WEAK = interner.intern(StrI("weak"))
  val SHARE = interner.intern(StrI("share"))
  val INL = interner.intern(StrI("inl"))
  val HEAP = interner.intern(StrI("heap"))
  val IMM = interner.intern(StrI("imm"))
  val MUT = interner.intern(StrI("mut"))
  val VARY = interner.intern(StrI("vary"))
  val FINAL = interner.intern(StrI("final"))

  val iff = interner.intern(StrI("if"))
  val elsse = interner.intern(StrI("elsse"))
  val foreeach = interner.intern(StrI("foreach"))
  val in = interner.intern(StrI("in"))
  val parallel = interner.intern(StrI("parallel"))
  val break = interner.intern(StrI("break"))
  val retuurn = interner.intern(StrI("return"))
  val whiile = interner.intern(StrI("while"))
  val destruct = interner.intern(StrI("destruct"))
  val set = interner.intern(StrI("set"))
  val unlet = interner.intern(StrI("unlet"))
  val block = interner.intern(StrI("block"))
  val pure = interner.intern(StrI("pure"))
  val unsafe = interner.intern(StrI("unsafe"))

  val DOT_DOT = interner.intern(StrI(".."))
  val ASTERISK = interner.intern(StrI("*"))
  val SLASH = interner.intern(StrI("/"))
  val PLUS = interner.intern(StrI("+"))
  val MINUS = interner.intern(StrI("-"))
  val SPACESHIP = interner.intern(StrI("<=>"))
  val LESS_THAN_OR_EQUAL = interner.intern(StrI("<="))
  val LESS_THAN = interner.intern(StrI("<"))
  val GREATER_THAN_OR_EQUAL = interner.intern(StrI(">="))
  val GREATER_THAN = interner.intern(StrI(">"))
  val TRIPLE_EQUALS = interner.intern(StrI("==="))
  val DOUBLE_EQUALS = interner.intern(StrI("=="))
  val NOT_EQUAL = interner.intern(StrI("!="))
  val AND = interner.intern(StrI("and"))
  val OR = interner.intern(StrI("or"))
  val NOT = interner.intern(StrI("not"))
}
