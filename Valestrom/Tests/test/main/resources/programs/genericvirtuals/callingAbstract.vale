
import v.builtins.tup.*;

interface MyInterface<T> rules(T Ref) {
  fn doThing(virtual x MyInterface<T>) int;
}

struct MyStruct<T> rules(T Ref) { }
impl<T> MyInterface<T> for MyStruct<T>;
fn doThing<T>(x MyStruct<T> impl MyInterface<T>) int {4}

fn main() int export {
  x = MyStruct<int>();
  y = MyStruct<str>();
  doThing(x);
  = doThing(y);
}
