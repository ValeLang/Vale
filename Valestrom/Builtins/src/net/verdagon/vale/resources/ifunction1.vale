
interface IFunction1<M, P1, R>
rules(M Mutability, P1 Ref, R Ref) M {
  fn __call(virtual self &!IFunction1<M, P1, R>, p1 P1) R;
}


struct Functor1<M, F>
rules(M Mutability, F Prot) M {
}
fn __call<M, F>(self &Functor1<M, F>, param1 Param1Type) RetType
rules(F Prot(_, (Param1Type), RetType), Param1Type Ref, RetType Ref) {
  F(param1)
}
