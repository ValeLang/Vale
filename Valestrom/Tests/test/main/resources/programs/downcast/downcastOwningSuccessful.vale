
interface IShip sealed {}

struct Serenity {}
impl IShip for Serenity;

struct Raza { fuel int; }
impl IShip for Raza;

fn moo(ship IShip) int {
  maybeRaza Result<Raza, IShip> = (ship).as<Raza>();
  ret if (maybeRaza.is_ok()) {
      maybeRaza.expect().fuel;
    } else {
      72
    }
}
fn main() int export {
  ret moo(Raza(42));
}
